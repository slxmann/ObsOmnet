//
// Generated file, do not edit! Created by opp_msgtool 6.1 from src/CoreNode/OBS_CoreRoutingTableEntry.msg.
//

#ifndef __OBS_COREROUTINGTABLEENTRY_M_H
#define __OBS_COREROUTINGTABLEENTRY_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class OBS_CoreRoutingTableEntry;
/**
 * Class generated from <tt>src/CoreNode/OBS_CoreRoutingTableEntry.msg:27</tt> by opp_msgtool.
 * <pre>
 * //
 * // Represents an entry of the Core node routing table.
 * //
 * // Used on OBS_CoreRoutingTable.
 * //
 * class OBS_CoreRoutingTableEntry extends omnetpp::cObject
 * {
 *     int inPort = -1; //Input port
 *     int inColour = -1; //Input colour
 *     int inLabel = -1; //Input label
 *     int outPort = -1; //Output port
 *     int outColour = -1; //Output colour
 *     int outLabel = -1; //Output label
 * }
 * </pre>
 */
class OBS_CoreRoutingTableEntry : public ::omnetpp::cObject
{
  protected:
    int inPort = -1;
    int inColour = -1;
    int inLabel = -1;
    int outPort = -1;
    int outColour = -1;
    int outLabel = -1;

  private:
    void copy(const OBS_CoreRoutingTableEntry& other);

  protected:
    bool operator==(const OBS_CoreRoutingTableEntry&) = delete;

  public:
    OBS_CoreRoutingTableEntry();
    OBS_CoreRoutingTableEntry(const OBS_CoreRoutingTableEntry& other);
    virtual ~OBS_CoreRoutingTableEntry();
    OBS_CoreRoutingTableEntry& operator=(const OBS_CoreRoutingTableEntry& other);
    virtual OBS_CoreRoutingTableEntry *dup() const override {return new OBS_CoreRoutingTableEntry(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getInPort() const;
    virtual void setInPort(int inPort);

    virtual int getInColour() const;
    virtual void setInColour(int inColour);

    virtual int getInLabel() const;
    virtual void setInLabel(int inLabel);

    virtual int getOutPort() const;
    virtual void setOutPort(int outPort);

    virtual int getOutColour() const;
    virtual void setOutColour(int outColour);

    virtual int getOutLabel() const;
    virtual void setOutLabel(int outLabel);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const OBS_CoreRoutingTableEntry& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, OBS_CoreRoutingTableEntry& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline OBS_CoreRoutingTableEntry *fromAnyPtr(any_ptr ptr) { return check_and_cast<OBS_CoreRoutingTableEntry*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __OBS_COREROUTINGTABLEENTRY_M_H

