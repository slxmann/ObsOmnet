//
// Generated file, do not edit! Created by opp_msgtool 6.1 from src/CoreNode/OBS_BCPControlInfo.msg.
//

#ifndef __OBS_BCPCONTROLINFO_M_H
#define __OBS_BCPCONTROLINFO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class OBS_BCPControlInfo;
/**
 * Class generated from <tt>src/CoreNode/OBS_BCPControlInfo.msg:23</tt> by opp_msgtool.
 * <pre>
 * // Control info object included in OBS_BurstControlPacket when converted to electrical.
 * class OBS_BCPControlInfo extends omnetpp::cObject
 * {
 *     int port = -1; // BCP input/output fiber.
 *     simtime_t BCPArrival = -1; // BCPini arrival time.
 * }
 * </pre>
 */
class OBS_BCPControlInfo : public ::omnetpp::cObject
{
  protected:
    int port = -1;
    omnetpp::simtime_t BCPArrival = -1;

  private:
    void copy(const OBS_BCPControlInfo& other);

  protected:
    bool operator==(const OBS_BCPControlInfo&) = delete;

  public:
    OBS_BCPControlInfo();
    OBS_BCPControlInfo(const OBS_BCPControlInfo& other);
    virtual ~OBS_BCPControlInfo();
    OBS_BCPControlInfo& operator=(const OBS_BCPControlInfo& other);
    virtual OBS_BCPControlInfo *dup() const override {return new OBS_BCPControlInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getPort() const;
    virtual void setPort(int port);

    virtual omnetpp::simtime_t getBCPArrival() const;
    virtual void setBCPArrival(omnetpp::simtime_t BCPArrival);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const OBS_BCPControlInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, OBS_BCPControlInfo& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline OBS_BCPControlInfo *fromAnyPtr(any_ptr ptr) { return check_and_cast<OBS_BCPControlInfo*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __OBS_BCPCONTROLINFO_M_H

