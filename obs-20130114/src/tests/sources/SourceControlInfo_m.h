//
// Generated file, do not edit! Created by opp_msgtool 6.1 from src/tests/sources/SourceControlInfo.msg.
//

#ifndef __SOURCECONTROLINFO_M_H
#define __SOURCECONTROLINFO_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class SourceControlInfo;
/**
 * Class generated from <tt>src/tests/sources/SourceControlInfo.msg:24</tt> by opp_msgtool.
 * <pre>
 * //Control info to attach to the scheduled objects with the index of OMNeT++ gate where the object will be sent by.
 * //Used in testSource2, testSource3, testSource4.
 * class SourceControlInfo
 * {
 *     int sendingIndex = -1;
 *     int label = -1; //Only for testSource2
 * }
 * </pre>
 */
class SourceControlInfo
{
  protected:
    int sendingIndex = -1;
    int label = -1;

  private:
    void copy(const SourceControlInfo& other);

  protected:
    bool operator==(const SourceControlInfo&) = delete;

  public:
    SourceControlInfo();
    SourceControlInfo(const SourceControlInfo& other);
    virtual ~SourceControlInfo();
    SourceControlInfo& operator=(const SourceControlInfo& other);
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    virtual int getSendingIndex() const;
    virtual void setSendingIndex(int sendingIndex);

    virtual int getLabel() const;
    virtual void setLabel(int label);
};


namespace omnetpp {

inline any_ptr toAnyPtr(const SourceControlInfo *p) {if (auto obj = as_cObject(p)) return any_ptr(obj); else return any_ptr(p);}
template<> inline SourceControlInfo *fromAnyPtr(any_ptr ptr) { return ptr.get<SourceControlInfo>(); }

}  // namespace omnetpp

#endif // ifndef __SOURCECONTROLINFO_M_H

