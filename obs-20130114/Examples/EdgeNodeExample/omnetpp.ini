[General]
sim-time-limit = 10s	# Simulation length (in simtime)
network = EdgeNodeExample
#debug-on-errors = true
#tkenv-plugin-path = ../../INET/Etc/plugins
#real-time-limit = 1000000s
**.vector-recording = false
**.scalar-recording = false

#**..ip.recordStats = true
**.ipv4.arp.arpResolutionCompleted.statistic-recording = true
**.ipv4.arp.arpResolutionFailed.statistic-recording =  true
**.interfaceTable.displayAddresses = true

**.lambdasEdge = 1
**.dataRate = 1Gbps	#Optical channel data rate = 1Gb per lambda

#Defining Edge Node colours for each lambda (defined only needed colours)
#=========================================================================
**.edge1.outColours = ""
**.edge2.outColours = ""

# Burst Label field value
#==============================
**.packetBurstifier[0].destLabel = 1
**.packetBurstifier[1].destLabel = 2

# Burstifier configuration (the same parameters for all)
#===================================================================
**.numFileBurstifiers = 0
**.numPacketBurstifiers = 2
**.packetBurstifier[*].timeout = 0.005s
**.packetBurstifier[*].maxSize = 125000000B
**.packetBurstifier[*].numPackets = 1
**.packetBurstifier[*].minOffset = 0.001s
**.packetBurstifier[*].maxOffset = 0.002s
**.packetBurstifier[*].minSizeWithPadding = 8B
**.packetBurstifier[*].overflowLastPacket = true
**.packetBurstifier[*].cteHeader = 8B
**.packetBurstifier[*].varHeader = 1B

# Burst Sender configuration
#===============================
**.sender.BCPSize = 16B # BCP size
**.sender.maxSchedBurstSize = 0B #maximum size (bits) of Sender's scheduled burst queue (0 = infinite queue)
**.sender.maxSchedBurstElems = 0 #maximum number of queued bursts (0 = infinite)
**.sender.testing = false # If true, the module doesn't try to register to Edge Node's interface table. Used for debugging purposes only

#Guard time
**.sender.guardTime = 0.000000001s

#Host application configuration
#==============================
# udp app (on)
**.host*.numApps = 1
**.host*.app[*].typename = "UdpBasicApp"
**.host1.app[*].destAddresses = "host2"
**.host2.app[*].destAddresses = "host1"
**.host*.app[*].messageLength = 64B
**.host*.app[*].sendInterval = 0.5s
**.host*.app[*].localPort = 1000
**.host*.app[*].destPort = 1000

#referencing the interfaceTable for the needed modules
#=================================================================
**.edge*.routingTable.interfaceTableModule =  "^.interfaceTable"
**.edge*.networkLayer.interfaceTableModule =  "^.interfaceTable"
**.edge*.eth[0].interfaceTableModule =  "^.interfaceTable"
**.edge*.ethEncap[*].interfaceTableModule =  "^.interfaceTable"
**.edge*.ppp[0].interfaceTableModule =  "^.interfaceTable"
EdgeNodeExample.edge*.obs.interfaceTableModule = "^.interfaceTable"
EdgeNodeExample.edge*.obs.assembler.sender.interfaceTableModule = "^.^.^.interfaceTable"
#seting routes
#++++++++++++++++++++++++++
**.cmdenv-log-level = info
**.arp.cmdenv-log-level = debug
**.ipv4.cmdenv-log-level = trace

#**.ipv4configurator.dumpAddresses = true
**.ipv4configurator.dumpRoutes = true
record-eventlog = true


allow-object-stealing-on-deletion = true


