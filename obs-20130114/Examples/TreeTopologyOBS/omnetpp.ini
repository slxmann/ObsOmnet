[General]
network = TreeTopologyOBS
sim-time-limit = 0.5s
cmdenv-performance-display = true

**.vector-recording = true #Disable all vectors
**.horizonVec.vector-recording = true

**.reportFile = ""
allow-object-stealing-on-deletion=true 

# General parameters 
#======================

# Disable all scalars (when possible)
**.scalar-recording = true

#Guard time for Edge and Core Nodes
**.edge*.**.guardTime = 0.000000001s	# Tx time for 1 bit of data
**.core*.**.guardTime = 0.000000001s

# Edge Nodes Initialization
#==========================

#Full wavelength conversion
**.edge*.outColours = ""

**.edge*.**.dispatcherRules = "DispatcherRules.dat"
**.numFileBurstifiers = 0
**.edge*.**.numPacketBurstifiers = 5 # Burstifiers enabled only for Edge 1

#Burstifier configuration. Everyone has the same parameters
include timeout.ini # Timeout will be defined in this file

**.packetBurstifier[*].maxSize = 125000000B
**.packetBurstifier[*].numPackets = 1000000000
**.packetBurstifier[*].minOffset = 0.00001024s 
**.packetBurstifier[*].maxOffset = 0.0001024s # Time BCP needs to travel across the worst path in the network (5 nodes) x 10g = 64
**.packetBurstifier[*].minSizeWithPadding = 8B
**.packetBurstifier[*].overflowLastPacket = true
**.packetBurstifier[*].cteHeader = 8B
**.packetBurstifier[*].varHeader = 1B
# Burstifier's labels
**.edge*.**.packetBurstifier[0].destLabel = 1
**.edge*.**.packetBurstifier[1].destLabel = 2
**.edge*.**.packetBurstifier[2].destLabel = 3
**.edge*.**.packetBurstifier[3].destLabel = 4
**.edge*.**.packetBurstifier[4].destLabel = 5

# Sender configuration
**.sender.BCPSize = 256B #BCP size
**.sender.maxSchedBurstSize = 0B # Maximum size of scheduled burst queue (0 = unlimited)
**.sender.maxSchedBurstElems = 0 # Maximum number of queued bursts (0 = unlimited)
**.sender.testing = false # Sender won't be used in a testing network


# Core Nodes Initialization
#==========================

#Full wavelength conversion for all cores
**.core*.inputColours = ""
**.core*.outputColours = ""

# OE/EO conversion delays
**.OEConversionDelay = 0s
**.EOConversionDelay = 0s
**.BCPProcessingDelay = 0s

#Host Initialization
#===================

# ip settings
#**.ip.procDelay = 0
#
## ARP configuration
#**.arp.cacheTimeout = 100s
#
## Ethernet NIC configuration
#**.eth[*].mac.txrate = 1e10bps
#
## Queues
#**.ppp[*].queue.frameCapacity = 100000000
#**.eth[*].queue.frameCapacity = 100000000

# Host Applications Initialization
#=================================

# udp app
# 4 UDP apps for each host. One app for each destination available
**.host*.numApps = 1
**.host*.app[*].typename = "UdpBasicApp"

#**.host*.udpApp[*].localPort = 10000
**.host*.app[*].destPort = 10000

**.host1.app[0].destAddresses = "host2"
**.host1.app[1].destAddresses = "host3"
**.host1.app[2].destAddresses = "host4"
**.host1.app[3].destAddresses = "host5"

**.host2.app[0].destAddresses = "host1"
**.host2.app[1].destAddresses = "host3"
**.host2.app[2].destAddresses = "host4"
**.host2.app[3].destAddresses = "host5"

**.host3.app[0].destAddresses = "host1"
**.host3.app[1].destAddresses = "host2"
**.host3.app[2].destAddresses = "host4"
**.host3.app[3].destAddresses = "host5"

**.host4.app[0].destAddresses = "host1"
**.host4.app[1].destAddresses = "host2"
**.host4.app[2].destAddresses = "host3"
**.host4.app[3].destAddresses = "host5"

**.host5.app[0].destAddresses = "host1"
**.host5.app[1].destAddresses = "host2"
**.host5.app[2].destAddresses = "host3"
**.host5.app[3].destAddresses = "host4"

**.messageLength = 1472B  # Maximum message size avoiding Ethernet fragmentation: 1472 bytes + 20 (IP) + 8 (UDP) and then convert to bits

# interfaceTables linking
#_=========================================================
**.edge*.routingTable.interfaceTableModule =  "^.interfaceTable"
**.edge*.networkLayer.interfaceTableModule =  "^.interfaceTable"
**.edge*.eth[0].interfaceTableModule =  "^.interfaceTable"
**.edge*.ethEncap[*].interfaceTableModule =  "^.interfaceTable"
**.edge*.ppp[0].interfaceTableModule =  "^.interfaceTable"
**.edge*.obs.assembler.sender.interfaceTableModule = "^.^.^.interfaceTable"
**.edge*.obs.interfaceTableModule = "^.interfaceTable"

**.ipv4NetConfig.dumpRoutes = true


# Define the number of lambdas for each link
**.lambdasEdge1 = 10
**.lambdasEdge2 = 10
**.lambdasEdge3 = 10
**.lambdasEdge4 = 10
**.lambdasEdge5 = 10

**.lambdasCore1to2 = 10
**.lambdasCore1to3 = 10
**.lambdasCore1to4 = 10
**.lambdasCore4to5 = 10

# Data rate
**.dataRate = 1e9bps	# 1Gbps for each lambda

# Tell Core Nodes the number of lambdas for each fiber. If these values don't match with the parameters above (number of lambdas), the simulation won't work as expected. Or even worse, show an 'invalid pointer' error.
**.core1.lambdasPerInPort = "10 10 10 10"
**.core1.lambdasPerOutPort = "10 10 10 10"
**.core2.lambdasPerInPort = "10 10"
**.core2.lambdasPerOutPort = "10 10"
**.core3.lambdasPerInPort = "10 10"
**.core3.lambdasPerOutPort = "10 10"
**.core4.lambdasPerInPort = "10 10 10"
**.core4.lambdasPerOutPort = "10 10 10"
**.core5.lambdasPerInPort = "10 10"
**.core5.lambdasPerOutPort = "10 10"


include params.ini

#Specific parameters for each run available
include run.ini