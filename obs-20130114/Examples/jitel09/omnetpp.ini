[General]
sim-time-limit = 1s	
network = jitel09Simulation

#tkenv-plugin-path = ../../INET/Etc/plugins
#debug-on-errors = true
allow-object-stealing-on-deletion = true
**.vector-recording = false #Disable all Vectors
#*.**.displayGateNames = true

**.reportFile = ""

#Define 2 data lambdas for each Edge Node and 4 lambdas for the connection between Cores
**.lambdasEdge1 = 2
**.lambdasEdge2 = 2
**.lambdasEdge3 = 2
**.lambdasEdge4 = 2
**.lambdasCore = 4
 
**.scalar-recording = false

**.dataRate = 1000000000bps	#Optical channel data rate = 1Gb per lambda

#Defining Edge Node colours for each lambda (defined only needed colours)
#=========================================================================
**.edge1.outColours = "3 6"
**.edge2.outColours = "9 12"
**.edge3.outColours = "3 6"
**.edge4.outColours = "9 12"

#Colours for Core Node connections
#==========================================================================
**.core1.inputColours = "3 6 | 9 12 | 9 3 12 6"
**.core1.outputColours = "3 6 | 9 12 | 9 3 12 6"
**.core2.inputColours = "3 6 | 9 12 | 9 3 12 6"
**.core2.outputColours = "3 6 | 9 12 | 9 3 12 6"

# Burst Label field value
#==============================
**.packetBurstifier[0].destLabel = 1
**.packetBurstifier[1].destLabel = 2
**.packetBurstifier[2].destLabel = 3
**.packetBurstifier[3].destLabel = 4

# Burstifier configuration (the same parameters for all)
#===================================================================
**.numFileBurstifiers = 0
**.numPacketBurstifiers = 4
**.packetBurstifier[*].timeout = 0.005s
**.packetBurstifier[*].maxSize = 125000000B
**.packetBurstifier[*].numPackets = 1
**.packetBurstifier[*].minOffset = 0.001s
**.packetBurstifier[*].maxOffset = 0.002s
**.packetBurstifier[*].minSizeWithPadding = 8B
**.packetBurstifier[*].overflowLastPacket = true
**.packetBurstifier[*].cteHeader = 8B
**.packetBurstifier[*].varHeader = 1B

# Burst Sender configuration
#===============================
**.sender.BCPSize = 16B # BCP size
**.sender.maxSchedBurstSize = 0B #maximum size (bits) of Sender's scheduled burst queue (0 = infinite queue)
**.sender.maxSchedBurstElems = 0 #maximum number of queued bursts (0 = infinite)
**.sender.testing = false # If true, the module doesn't try to register to Edge Node's interface table. Used for debugging purposes only

# Core Node configuration
#==============================
**.core1.lambdasPerInPort = "2 2 4" #This values should be the same that the values registered in lambdasEdge* and lambdasCore* 
**.core1.lambdasPerOutPort = "2 2 4" #This values should be the same that the values registered in lambdasEdge* and lambdasCore* 
**.core2.lambdasPerInPort = "2 2 4"
**.core2.lambdasPerOutPort = "2 2 4"



**.OEConversionDelay = 0s
**.EOConversionDelay = 0s
**.BCPProcessingDelay = 0s

#Guard time
**.sender.guardTime = 0.000000001s
**.guardTime = 0.000000001s


# TCP/IP Config
#==============================

# ip settings
#**.ip.procDelay = 0s
#
## ARP configuration
**.arp.cacheTimeout =  100s
#
## Ethernet NIC configuration
#**.eth[*].mac.txrate = 1e10bps	
#
## Queues
#**.ppp[*].queue.frameCapacity = 10000000000000	
#**.eth[*].queue.frameCapacity = 1000000000
**.ipv4configurator.dumpRoutes = true


**.edge*.routingTable.interfaceTableModule = "^.interfaceTable"
**.edge*.ppp[0].interfaceTableModule = "^.interfaceTable"
**.edge*.eth[0].interfaceTableModule = "^.interfaceTable"
**.edge*.ethEncap[*].interfaceTableModule =  "^.interfaceTable"
**.edge*.networkLayer.interfaceTableModule = "^.interfaceTable"
**.edge*.obs.assembler.sender.interfaceTableModule = "^.^.^.interfaceTable"
**.edge*.obs.interfaceTableModule = "^.interfaceTable"

**.host*.numApps = 1
# Trafico de interes
#**.host1.udpAppType = "UDPBasicApp"
**.host1.app[*].typename = "UdpBasicApp"
**.host1.app[*].destAddresses = "host3"
**.host1.app[*].messageLength = 65000B
#**.host1.udpApp[*].messageFreq = exponential(0.0000325s)	# rho=0.2, c=8
**.host1.app[*].sendInterval = exponential(0.0000325s)	# rho=0.2, c=8
# Trafico interferente
#**.host2.udpAppType = "UDPBasicApp"
**.host2.app[*].typename = "UdpBasicApp"
**.host2.app[*].destAddresses = "host4"
**.host2.app[*].messageLength = 65000B
#**.host2.udpApp[*].messageFreq = exponential(0.00065s)	# rho=0.1, c=8
**.host2.app[*].sendInterval = exponential(0.00065s)	# rho=0.1, c=8
# Other hosts
#**.host*.udpAppType = "UDPSink"
**.host*.app[*].typename = "UdpSink"
**.host*.app[*].localPort = 1000
**.host*.app[*].destPort = 1000


#Include per-run parameters 
#include run.ini
